// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for locales */
export type Id = number & { __flavor?: 'Id' };

/** Represents the table public.locales */
export default interface Locales {
  /** Database type: pg_catalog.int8 */
  id: Id;

  /** Database type: pg_catalog.uuid */
  uuid: string;

  /** Database type: pg_catalog.bpchar */
  lang: string;

  /** Database type: pg_catalog.text */
  value: string | null;
}

/** Represents the initializer for the table public.locales */
export interface LocalesInitializer {
  /**
   * Database type: pg_catalog.int8
   * Default value: nextval('locales_id_seq'::regclass)
   */
  id?: Id;

  /** Database type: pg_catalog.uuid */
  uuid: string;

  /** Database type: pg_catalog.bpchar */
  lang: string;

  /** Database type: pg_catalog.text */
  value?: string | null;
}

/** Represents the mutator for the table public.locales */
export interface LocalesMutator {
  /** Database type: pg_catalog.int8 */
  id?: Id;

  /** Database type: pg_catalog.uuid */
  uuid?: string;

  /** Database type: pg_catalog.bpchar */
  lang?: string;

  /** Database type: pg_catalog.text */
  value?: string | null;
}

export const id = z.string() as unknown as z.Schema<Id>;

export const locales = z.object({
  id: id,
  uuid: z.string(),
  lang: z.string(),
  value: z.string().nullable(),
}) as unknown as z.Schema<Locales>;

export const localesInitializer = z.object({
  id: id.optional(),
  uuid: z.string(),
  lang: z.string(),
  value: z.string().optional().nullable(),
}) as unknown as z.Schema<LocalesInitializer>;

export const localesMutator = z.object({
  id: id.optional(),
  uuid: z.string().optional(),
  lang: z.string().optional(),
  value: z.string().optional().nullable(),
}) as unknown as z.Schema<LocalesMutator>;
